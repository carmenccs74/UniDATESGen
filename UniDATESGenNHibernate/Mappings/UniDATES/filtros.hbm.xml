<?xml version="1.0" encoding="utf-8" ?>
		<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
		                   assembly="UniDATESGenNHibernate"
		                   namespace="UniDATESGenNHibernate.EN.UniDATES">
		    
		    
			
				<class name="FiltrosEN" table="Filtros"> 
				  	
						<id name="IdFiltros" column="idFiltrosFiltros" type="integer"> 
							<generator class="hilo"/>
						</id>
			
					
					<property name="ObjetivoCita" > 
						<column name="objetivoCita"  not-null="true"/>
					</property>
					<property name="Universidad" type="string"> 
						<column name="universidad"  not-null="true"/>
					</property>
					<property name="Curso" type="integer"> 
						<column name="curso"  not-null="true"/>
					</property>
					<property name="Grado" type="string"> 
						<column name="grado"  not-null="true"/>
					</property>
					<property name="Facultad" type="string"> 
						<column name="facultad"  not-null="true"/>
					</property>
					<property name="Gastronomia" > 
						<column name="gastronomia"  not-null="true"/>
					</property>
					<property name="Deporte" > 
						<column name="deporte"  not-null="true"/>
					</property>
					<property name="Ocio" > 
						<column name="ocio"  not-null="true"/>
					</property>
					<property name="GustosMusicales" > 
						<column name="gustosMusicales"  not-null="true"/>
					</property>
			
			
			
			
			
			
			
			
			
			
			
			
		  			
						<many-to-one name="Usuario" class="UniDATESGenNHibernate.EN.UniDATES.UsuarioEN" >	
								<column name="FK_IDUsuario_idUsuario"/> 
						</many-to-one>
											 					
					
					
					
					
					
					
					
					
					
					
					
		
		 </class>	
		  
		  <query name="FiltrosENReadAllHQL">from FiltrosEN</query>
		  <query name="FiltrosENElegirHQL"><![CDATA[select usuario FROM UsuarioEN as usuario inner join usuario.Filtros as filtro where (:p_objetivoCita is not null and filtro.ObjetivoCita = :p_objetivoCita)  or (:p_universidad is not null and filtro.Universidad = :p_universidad) or (:p_curso is not null and filtro.Curso = :p_curso) or (:p_grado is not null and filtro.Grado = :p_grado) or (:p_facultad is not null and filtro.Facultad = :p_facultad) or (:p_gastronomia is not null and filtro.Gastronomia = :p_gastronomia) or (:p_deporte is not null and filtro.Deporte = :p_deporte) or (:p_ocio is not null and filtro.Ocio = :p_ocio) or (:p_gustosMusicales is not null and filtro.GustosMusicales = :p_gustosMusicales)]]></query>
		</hibernate-mapping>
	